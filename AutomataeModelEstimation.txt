
% Initialize SPM
spm_jobman('initcfg');
spm('defaults', 'FMRI');
spm_get_defaults('cmdline', true);  % Avoid prompts
spm_get_defaults('mask.thresh', -Inf);  % Additional settings if you encounter masking prompts
spm_get_defaults('stats.maxmem', 2^40); % if memory bottlenecks

% Suppress any prompts (like overwriting existing files)


for i = 1:size(array, 2)

subject = array(1,i);
%For the time being, j (number of sessions per subject) will be harcoded. fix later.
for j = 2:4
if ~strcmp(array(1,i), array(j,i))
session=array(j,i);
disp(session);
dataDir = ("/analysis/HCP/BIDS/ses-" + session + "/sub-" + subject + "/MNINonLinear/Results/ses-" + session + "_task-stroop_acq-PA_run-01_bold");

destDir = cell(destDir)
disp(dataDir)

end

% Initialize SPM for fMRI
spm('defaults', 'FMRI');
spm_jobman('initcfg');

% Suppress any prompts (like overwriting existing files)
spm_get_defaults('cmdline', true);

% Define the path to the directory containing the existing SPM.mat file

% Specify the full path to the existing SPM.mat file
spmFilePath = destDir + "/SPM.mat"
spmFilePath = char(spmFilePath)

% Verify that the SPM.mat file exists

% Initialize the batch job structure
matlabbatch = [];

% Model Estimation
matlabbatch{1}.spm.stats.fmri_est.spmmat = {spmFilePath}; % Use a cell array to specify the SPM.mat file path

% Run the estimation batch
spm_jobman('run', matlabbatch);

end
end
